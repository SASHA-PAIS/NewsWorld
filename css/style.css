@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&family=Staatliches&display=swap');

:root {
    --primary-color:#c72727;
    --secondary-color: #f99500;
    --light-color: #f3f3f3;
    --dark-color: #333;
    --max-width: 1100px;

}

.category{
    --sports-color: #f99500;
    --ent-color: #a66bbe;
    --tech-color: #009cff;
}


*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    font-family: 'Lato', sans-serif;
    line-height: 1.5;
    background: var(--light-color);
}

a{
    color: #333;
    text-decoration: none;
}

ul{
    list-style: none;
}

p{
    margin: 0.5rem 0;
}

img{
    width: 100%;   /*Of its container*/
}

h1, h2, h3, h4, h5, h6{
    font-family: 'Staatliches', cursive;
    margin-bottom: .55rem;
    line-height: 1.3;
}

/* Utility */

.container{
    max-width: var(--max-width);
    margin: auto;
    padding: 0 2rem;
    overflow: hidden;      /*So that it always shows the content within*/

}

.category {
    display: inline-block;
    color: #fff;
    font-size: 0.6rem;
    text-transform: uppercase;
    padding: 0.4rem 0.6rem;
    border-radius: 15px;
    margin-bottom: 0.5rem;
}

.category-sports {background: var(--sports-color);}
.category-ent {background: var(--ent-color);}
.category-tech {background: var(--tech-color);}

.btn{
    display:inline-block;
    border: none;            /*If we use this class for an actual <button> instead of <a> tag*/
    background: var(--dark-color);
    color: #fff;
    padding: 0.5rem 1.5rem;
}

.btn-light {background: var(--light-color);}
.btn-dark {background: var(--dark-color);}       /*Optional becasue it is dark by default (in .btn{})*/
.btn-primary {background: var(--primary-color);}
.btn-secondary {background: var(--secondary-color);}

.btn:hover{
    opacity: 0.85;
}

.btn-block{
    display: block;
    width: 100%;
    text-align: center;
}

.card{
    background: #fff;
    padding: 1rem;
}

.bg-dark{
    background: var(--dark-color);
    color: #fff;
}

.bg-primary{
    background: var(--primary-color);
    color: #fff;
}

.bg-secondary{
    background: var(--secondary-color);
    color: #fff;
}

.bg-dark h1,
.bg-dark h2,
.bg-dark h3,
.bg-dark a,
.bg-primary h1,
.bg-primary h2,
.bg-primary h3,
.bg-primary a,
.bg-secondary h1,
.bg-secondary h2,
.bg-secondary h3,
.bg-secondary a {
    color: #fff;
}

.py-1{ padding: 1.5rem 0 } 
.py-2{ padding: 2rem 0 } 
.py-3{ padding: 3rem 0 } 

.p-1{ padding: 1.5rem  } 
.p-2{ padding: 2rem  } 
.p-3{ padding: 3rem  } 

.l-heading{
    font-size: 3rem;
}

.list li{
    padding: 0.5rem 0;
    border-bottom: #555 dotted 1px;
    width: 90%;
}

.list li a:hover{
    color: var(--primary-color) !important;    
    /*Without important it doesn't work for some reason, 
    maybe it's getting overrided somewhere else. Hence the important flag is necessary.*/
}


/* Inner page grid container */
.page-container{
    display: grid;
    grid-template-columns: 5fr 2fr;
    padding: 2rem 0;
    grid-gap: 1.5rem;
}

.page-container > *:first-child{
    grid-row: 1 / span 3;
}

/* Navigation */

#main-nav{
    background: #fff;
    position: sticky;
    top: 0;
    z-index: 2;
}

#main-nav .container{
    display: grid;       /*It'll make the logo, social icons and the links grid items*/
    grid-template-columns: 6fr 3fr 2fr;
    align-items: center;
    padding: 1rem;
}

#main-nav .logo{
    width: 180px;
}

#main-nav ul{
    justify-self: end;      /*Pushes the links to the extreme right*/
    /* justify-items allows you to set a default position for content placed in the grid's grid items (A grid item being a box in the grid). 
    This is a property of the grid container.
    justify-self allows you to override the default position of content in an individual cell. */
    display: flex;
}

#main-nav ul li a{
    padding: 0.75rem;
    font-weight: bold;
}

#main-nav ul li a.current{
    background: var(--primary-color);
    color: #fff;
}

#main-nav ul li a:hover{
    background: var(--light-color);
    color: var(--dark-color);
}

#main-nav .social{
    /* When  we're aligning the actual item itself we use self,
    if we're using the parent, we can use justify-content or align-items*/
    justify-self: center;
}

#main-nav .social i {
    color: #777;
    margin-right: 0.5rem;
}



/* Showcase */

#showcase{
    color: #fff;
    background: #333;
    padding: 2rem;
    position: relative;
    /* The before pseudoselector is going to be positioned absolute.
    If you position something absolute, it is positioned inside of the first 
    relative container (showcase) */
}

#showcase:before {
    content:'';
    background: url('../img/featured.jpg') no-repeat bottom center/cover;
    position: absolute;
    top:0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.4;
}

#showcase .showcase-container{
    display:grid;
    grid-template-columns: repeat(2, 1fr);
    justify-content: center;
    align-items: center;
    height: 50vh;
  
}

#showcase .showcase-content {
    z-index: 1;
}

#showcase .showcase-content p {
    margin-bottom: 1rem;
}



/* Home articles */

#home-articles .articles-container{
    display:grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 1rem; 
}

#home-articles .articles-container > *:first-child,
#home-articles .articles-container > *:last-child{

    /* > means direct child of articles-container
      * means whatever element that direct child would be (in this case its  <article>). Could be a <div> also.
      first-child indicates the first <article> tag out of the seven. 
   */


    grid-column: 1 / span 2;    
    /*spans across 2 columns of the outer grid (articles-container). 
    Because this first child is a grid item of the outer grid container*/

    /* Now we also convert it to a grid container  */
    
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 1rem;
    
}


#home-articles .articles-container > *:last-child{
    grid-column: 2 / span 2;     /*Start at the 2nd col and span 2 */
}

/* Article page */
#article .meta{
    display:flex;
    justify-content: space-between;
    align-items: center;
    background: #eee;
    padding: 0.5rem;
}

#article .meta .category{
    margin-top: 0.4rem;
}

/* Footer */
#main-footer{
    background: var(--dark-color);
    color:#fff;
}

#main-footer img{
    width: 150px;
}

#main-footer a{
    color: #fff;
}

#main-footer .footer-container{
    display:grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 1.5rem;

}

#main-footer .footer-container > *:last-child{
    background: #444;
    grid-column: 1 / span 4;
    padding: 0.5rem;
    text-align: center;
    font-size: 0.75rem;
}

#main-footer .footer-container input[type='email'] {
    width: 90%;
    padding: 0.5rem;
    margin-bottom: 0.5rem;
}

#main-footer .footer-container input[type='submit'] {
    width: 90%;
}


